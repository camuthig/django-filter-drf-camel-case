[tool.poetry]
name = "django_filter_drf_camel_case"
version = "0.1.0"
description = "A collection of utility classes that make using camel cased query parameters easier with Django REST Framework and django-filter"
readme = "README.md"
authors = ["Chris Muthig <camuthig@gmail.com>"]
license = "MIT"
packages = [
    { include = "django_filter_drf_camel_case", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.7"
django-filter = ">= 2.0, < 23.0"
djangorestframework-camel-case = "^1.0"
djangorestframework = "^3.0"

drf-spectacular = { version = "^0.24.0", extras = ["drf-spectactular"] }

[tool.poetry.dev-dependencies]
pytest = "^7.1"
pre-commit = "^2.18"
flake8 = "^5.0"
black = "^22.3"
mypy = "^0.991"
nox = "^2022.1"
isort = "^5.10"
coverage = {extras = ["toml"], version = "^6.3.2"}
pytest-cov = "^4.0.0"

[tool.poetry.group.dev.dependencies]
django-stubs = "^1.13.0"
djangorestframework-stubs = "^1.8.0"
django-filter-stubs = "^0.1.2"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.mypy]
exclude = [
    "example_project",
    "tests",
]

[[tool.mypy.overrides]]
module = "djangorestframework_camel_case.*"
ignore_missing_imports = true

[tool.black]
line-length = 128

[tool.coverage.paths]
source = ["src/django_filter_drf_camel_case"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
omit = ["tests/*", "**/__init__.py"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
